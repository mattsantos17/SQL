# Using a DVD Rental Dataset, i used the following SQL queries to answer business questions: 

# Select everything from the actor table: 
SELECT * 
FROM actor; 

# Select customers first name, last name, and email address: 
SELECT first_name, last_name, email
FROM customer; 

# What type of movie ratings do we have in our database?: 
SELECT DISTINCT(rating)
FROM film; 

# What is Nacy Thomas email adress? 
SELECT email
FROM customer
WHERE first_name = 'Nancy' AND last_name = 'Thomas'; 

# What is the movie description for the movie named "Outlaw Hanky"?: 
SELECT description
FROM film
WHERE title = 'Outlaw Hanky'; 

# What is the phone number for the customer who lives at 259 Iphoh Drive?: 
SELECT phone
FROM address
WHERE address ILIKE '259 Ip%';

# What are the customer ID's of the first 10 paying customers?:
SELECT customer_id
FROM payment
ORDER BY payment_date ASC
LIMIT 10;

# What are the titles of the five shortest movies in runtime?: 
SELECT title, length
FROM film 
ORDER BY length ASC
LIMIT 5; 

# How many movies are 50 mins or less?: 
SELECT COUNT (title)
FROM film 
WHERE length <= 50; 

# How many payments where greater than $5?:
SELECT COUNT (payment_id)
FROM payment
WHERE amount > 5; 

# How many actors have a name that starts with P?: 
SELECT COUNT (first_name)
FROM actor
WHERE first_name ILIKE 'P%'; 

# How many unique districts are our customers from?: 
SELECT COUNT (DISTINCT district)
FROM address; 

# How many films have a rating of R and a replacement cost of 5 and 15 dollars?: 
SELECT COUNT (*) 
FROM film 
WHERE rating = 'R' AND replacement_cost BETWEEN 5 AND 15;

# How many films have the name "truman" in the title?:
SELECT COUNT(*) 
FROM film 
WHERE title ILIKE '%Truman%';

# Select the Most and least expensive replacement cost:
SELECT MAX (replacement_cost) AS MXX, MIN(replacement_cost) AS MIN
FROM film;

# What is the average replacement cost?:
SELECT ROUND(AVG(replacement_cost),2)
FROM film; 

# What is the average replacement cost per rating?:
SELECT ROUND(AVG(replacement_cost),2) AS AVG_COST, rating 
FROM film
GROUP BY rating; 

# What ratings have an average replacement cost greater than 20? 
SELECT ROUND(AVG(replacement_cost),2) AS AVG_COST, rating 
FROM film
GROUP BY rating 
HAVING AVG(replacement_cost) > 20; 

# What are the emails of the customers who live in California?: 
SELECT first_name, last_name, email, district
FROM customer
INNER JOIN address
ON customer.address_id = address.address_id
WHERE district = 'California'; 

# What months did all the payments occur? 
SELECT DISTINCT(EXTRACT (MONTH FROM payment_date))
FROM payment; 

# How many payments occured on a Monday? 
SELECT COUNT(EXTRACT (DOW FROM payment_date)) as dow 
FROM payment
WHERE EXTRACT (DOW FROM payment_date) = 1; 
